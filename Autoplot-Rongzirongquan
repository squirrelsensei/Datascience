#coding:utf-8
import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif']=['SimHei'] #用来正常显示中文标签
plt.rcParams['axes.unicode_minus']=False #用来正常显示负号
from selenium import webdriver
from pyquery import PyQuery as pq
code=['601318','000039','600030','002594','001979','000002','601933','002714','300251','000100','000725','002008','601939','600460','002049','000333','002415']
name=['中国平安', '中集集团', '中信证券','比亚迪','招商蛇口','万科A','永辉超市','牧原股份','光线传媒','TCL集团','京东方A','大族激光','建设银行','士兰微','紫光国芯','美的集团','海康威视']
today = '2018-03-28'
lazy=[]
nn = 0
subprice = 10
for i in range(len(code)):
    browser = webdriver.PhantomJS()
    url = 'http://data.eastmoney.com/rzrq/stock/' + code[i] + '.html'
    browser.get(url)
    html = browser.execute_script("return document.documentElement.outerHTML")
    doc = pq(html)
    trsingle = doc('tr[class=""]')
    trodd = doc('tr[class="odd"]')
    day = trsingle('td[class="col"]').eq(0).text()
    if day==today:
        xjsingle = []
        xjodd = []
        xjs = []
        for td in trsingle.items():
            price1 = (td('td').eq(1).text())
            if len(price1) == 1:
                price1 = subprice
            xjsingle.append(float(price1))
            subprice = price1
        for td in trodd.items():
            price2=(td('td').eq(1).text())
            if len(price2)==1:
                price2 = subprice
            xjodd.append(float(price2))
            subprice = price2
        for i in range(min(len(xjodd),len(xjsingle))):
            xjs.append(xjsingle[i])
            xjs.append(xjodd[i])
        jmrsingle = []
        jmrodd = []
        jmrs = []
        for td in trsingle.items():
            tran1 = td('td').eq(7).text()
            if tran1.isdigit() == False:
                b = tran1.split(" ")
                if len(b) < 2:
                    if len(b[0]) == 1:
                        tran1 = float(0)
                    else:
                        tran1 = float(b[0]) / 10000
                elif ord(b[1]) == 20159:
                    tran1 = float(b[0]) * 10000
                else:
                    tran1 = float(b[0])
            else:
                tran1 = float(tran1) / 10000
            jmrsingle.append(tran1)
        for td in trodd.items():
            tran2 = td('td').eq(7).text()
            if tran2.isdigit() == False:
                b = tran2.split(" ")
                if len(b) < 2:
                    if len(b[0]) == 1:
                        tran2 = float(0)
                    else:
                        tran2 = float(b[0]) / 10000
                elif ord(b[1]) == 20159:
                    tran2 = float(b[0]) * 10000
                else:
                    tran2 = float(b[0])
            else:
                tran2 = float(tran2) / 10000
            jmrodd.append(tran2)
        for i in range(len(jmrodd)):
            jmrs.append(jmrsingle[i])
            jmrs.append(jmrodd[i])
        jmcsingle = []
        jmcodd = []
        jmcs = []
        for td in trsingle.items():
            tran3 = td('td').eq(12).text()
            if tran3.isdigit() == False:
                b = tran3.split(" ")
                if len(b) < 2:
                    if len(b[0]) == 1:
                        tran3 = float(0)
                    else:
                        tran3 = float(b[0]) / 10000
                elif ord(b[1]) == 20159:
                    tran3 = float(b[0]) * 10000
                else:
                    tran3 = float(b[0])
            else:
                tran3 = float(tran3) / 10000
            jmcsingle.append(tran3)
        for td in trodd.items():
            tran4 = td('td').eq(12).text()
            if tran4.isdigit() == False:
                b = tran4.split(" ")
                if len(b) < 2:
                    if len(b[0]) == 1:
                        tran4 = float(0)
                    else:
                        tran4 = float(b[0]) / 10000
                elif ord(b[1]) == 20159:
                    tran4 = float(b[0]) * 10000
                else:
                    tran4 = float(b[0])
            else:
                tran4 = float(tran4) / 10000
            jmcodd.append(tran4)
        for i in range(len(jmcodd)):
            jmcs.append(jmcsingle[i])
            jmcs.append(jmcodd[i])
        xman = range(len(xjs)+1)
        days = list(xman[1:])
        xjs = list(reversed(xjs))
        jmrs = list(reversed(jmrs))
        jmcs = list(reversed(jmcs))
        mrrr = []
        ljrr = []
        a1 = 0
        for i in range(len(xjs)):
            mrrr.append(jmrs[i] - (xjs[i] * jmcs[i]))
            a1 = a1 + mrrr[i]
            ljrr.append(a1)
        mrrc = []
        ljrq = []
        a2 = 0
        for i in range(len(xjs)):
            mrrc.append(xjs[i] * jmcs[i])
            a2 = a2 + mrrc[i]
            ljrq.append(a2)
        x1 = days
        y1 = xjs
        x2 = days
        y2 = ljrr
        x3 = days
        y3 = ljrq
        plt.figure()
        # figure分成3行3列, 取得第一个子图的句柄, 第一个子图跨度为1行3列, 起点是表格(0, 0)
        ax1 = plt.subplot2grid((3, 3), (0, 0), colspan=3, rowspan=1)
        l1, = ax1.plot(x1, y1, '#000000')
        ax1.set_title(day + name[nn] + '融资融券图')
        plt.legend(handles=[l1], labels=['股价'], loc='upper left', fontsize = 8)
        # figure分成3行3列, 取得第二个子图的句柄, 第二个子图跨度为1行3列, 起点是表格(1, 0)
        ax2 = plt.subplot2grid((3, 3), (1, 0), colspan=3, rowspan=1)
        l2, = ax2.plot(x2, y2, 'b')
        plt.legend(handles=[l2], labels=['累计净流入'], loc='upper left', fontsize = 8)
        # figure分成3行3列, 取得第四个子图的句柄, 第四个子图跨度为1行3列, 起点是表格(2, 0)
        ax3 = plt.subplot2grid((3, 3), (2, 0), colspan=3, rowspan=1)
        l3, = ax3.plot(x3, y3, '#f00335')
        plt.legend(handles=[l3], labels=['累计净融券'], loc='upper left', fontsize = 8)
        plt.savefig(name[nn] + '.png', dpi=300)
        nn = nn + 1
        plt.close()
    else:
        lazy.append(code[i])
print(lazy)
