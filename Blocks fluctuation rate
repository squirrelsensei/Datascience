#coding:utf-8
def upper_line(vol):
    kkvol=[]
    for x in range(1, 6):
        kvol = (vol[-1]-vol[-x-1]) / x
        kkvol.append(kvol)
    if kkvol[0] == max(kkvol) and kkvol[0] > 0:
        k=1
    else:
        k=2
    return k

def blocks_value_sum(a, frame):
    sumvalue = 0
    for i in range(frame.shape[0]):
        value = frame.iloc[i, 3].split('[')[1].split(']')[0].split(',')
        if len(value) < -a:
            sumvalue = sumvalue + float(0)
        else:
            sumvalue = sumvalue + float(value[a])
    return sumvalue

def blocks_volume_sum(a, frame):
    sumvolume = 0
    for i in range(frame.shape[0]):
        volume= frame.iloc[i, 4].split('[')[1].split(']')[0].split(',')
        if len(volume) < -a:
            sumvolume = sumvolume + float(0)
        else:
            sumvolume = sumvolume + float(volume[a])
    return sumvolume

def tutuwang(x1, y1, y2, y3, y4, h, d, q):
    plt.figure()
    # figure分成3行3列, 取得第一个子图的句柄, 第一个子图跨度为1行3列, 起点是表格(0, 0)
    ax1 = plt.subplot2grid((3, 3), (0, 0), colspan=3, rowspan=1)
    l1, = ax1.plot(x1, y1, '#000000', lw=1)
    ax1.set_title(str(h) + ' ' + str(d))
    plt.legend(handles=[l1], labels=['板块市值'], loc='upper left', fontsize=8)
    # figure分成3行3列, 取得第二个子图的句柄, 第二个子图跨度为1行3列, 起点是表格(1, 0)
    ax2 = plt.subplot2grid((3, 3), (1, 0), colspan=3, rowspan=1)
    l2, = ax2.plot(x1, y2, 'b', lw=1)
    plt.legend(handles=[l2], labels=['板块波动'], loc='upper left', fontsize=8)
    line, = ax2.plot(x1, y4, 'r--', lw=0.7)
    # figure分成3行3列, 取得第四个子图的句柄, 第四个子图跨度为1行3列, 起点是表格(2, 0)
    ax3 = plt.subplot2grid((3, 3), (2, 0), colspan=3, rowspan=1)
    l3, = ax3.plot(x1, y3, 'r', lw=1)
    plt.legend(handles=[l3], labels=['板块成交额'], loc='upper left', fontsize=8)
    plt.savefig(q + str(h) + str(d) + '.png', dpi=300)
    plt.close()
    return None

import pandas as pd
import xlrd
import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif']=['SimHei'] #用来正常显示中文标签
plt.rcParams['axes.unicode_minus']=False #用来正常显示负号

xlsfile1 = r"D:\stocks\standardstocks.xlsx"# 打开指定路径中的xls文件
book1 = xlrd.open_workbook(xlsfile1)#得到Excel文件的book对象，实例化对象
sheet1 = book1.sheet_by_index(1) # 通过sheet索引获得sheet对象\

xlsfile = r"D:\stocks\pricegetbuy\orz.xlsx"  # 打开指定路径中的xls文件
df = pd.DataFrame(pd.read_excel(xlsfile))

for i in range(66):
    hang = sheet1.cell_value(i, 0)
    df0 = df.loc[df['hang'] == hang]
    value=[]
    volume=[]
    ratio = []
    ratiosub = []
    zero=[]
    for n in range(1, 60):
        valueplus = blocks_value_sum(-n, df0) - blocks_value_sum(-(n+1), df0)
        rawratio = blocks_volume_sum(-n, df0) / valueplus
        while abs(rawratio) > 50:
            rawratio = rawratio / 2
        ratio.append(rawratio)
        ratiosub.append(rawratio)
        value.append(blocks_value_sum(-n, df0))
        volume.append(blocks_volume_sum(-n, df0))
        zero.append(0)
    ratio.reverse()
    value.reverse()
    volume.reverse()
    tutuwang(range(1, 60), value, ratio, volume, zero, hang, '20180418', 'p2')
    if  ratio.index(ratio[-1]) - ratio.index(max(ratio[-7:-1])) <=2:
        print(hang)
        tutuwang(range(1, 60), value, ratio, volume, zero, hang, '20180418', 'p1')
    else:
        ratiosub.pop(ratiosub.index(max(ratiosub[-7:-1])))
        if ratiosub.index(ratiosub[-1]) - ratiosub.index(max(ratiosub[-6:-1])) <= 2:
            print(hang)
            tutuwang(range(1, 60), value, ratio, volume, zero, hang, '20180418', 'p1')
        elif upper_line(volume)==1:
            print(hang)
            tutuwang(range(1, 60), value, ratio, volume, zero, hang, '20180418', 'p1')
